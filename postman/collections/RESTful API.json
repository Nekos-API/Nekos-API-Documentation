{
	"info": {
		"_postman_id": "bfd6d329-a020-486a-aaa8-c53b33e9aa85",
		"name": "RESTful API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "19757005-bfd6d329-a020-486a-aaa8-c53b33e9aa85"
	},
	"item": [
		{
			"name": "Images",
			"item": [
				{
					"name": "Get all images",
					"id": "459d2c67-e31b-456d-8e7a-23640059e901",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/images",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"images"
							],
							"query": [
								{
									"key": "sort",
									"value": "createdAt,updatedAt,height,width,ageRating,title,isOriginal,isVerified",
									"type": "text",
									"description": "The order in which the items will be returned. Prepend a - character to an item to inverse the sort order (for that item).",
									"disabled": true
								},
								{
									"key": "included",
									"value": "uploader,characters,categories,liked-by",
									"type": "text",
									"description": "The included resources.",
									"disabled": true
								},
								{
									"key": "page[limit]",
									"value": "10",
									"type": "text",
									"description": "The amount of items returned per page.",
									"disabled": true
								},
								{
									"key": "page[offset]",
									"value": "0",
									"type": "text",
									"description": "The amount of items to skip.",
									"disabled": true
								},
								{
									"key": "filter[search]",
									"value": "catgirl eating rice",
									"description": "Search for an image by it's title.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "filter[id]",
									"value": "af52a61b-843c-481e-a173-ad31eedaa68e",
									"type": "text",
									"description": "Filter for an image with this exact ID. Is preferable to use the `Get image by ID` endpoint instead of using this filter.",
									"disabled": true
								},
								{
									"key": "filter[id.in]",
									"value": "af52a61b-843c-481e-a173-ad31eedaa68e,fa216a8e-9bab-4d14-b079-5b30db2b18bd",
									"type": "text",
									"description": "Returns images with any of the IDs selected. As this parameter is a filter, no 404 error is returned if one or more IDs do not match any image.",
									"disabled": true
								},
								{
									"key": "filter[id.regex]",
									"value": "(^af52a61b|^fa216a8e)",
									"type": "text",
									"description": "Returns images matching a PostgreSQL regular expression (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[id.iregex]",
									"value": "(^af52a61b|^fa216a8e)",
									"type": "text",
									"description": "Returns images matching a PostgreSQL regular expression (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[title]",
									"value": "Catgirl cooking rice",
									"type": "text",
									"description": "Returns images where the title is equal to the specified value (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[title.iexact]",
									"value": "Catgirl cooking rice",
									"type": "text",
									"description": "Returns images where the title is equal to the specified value (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[title.contains]",
									"value": "Catgirl cooking",
									"type": "text",
									"description": "Returns images where the title contains the specified value (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[title.icontains]",
									"value": "catgirl cooking",
									"type": "text",
									"description": "Returns images where the title contains the specified value (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[title.startswith]",
									"value": "catgirl",
									"type": "text",
									"description": "Returns images where the title starts with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[title.endswith]",
									"value": "cooking",
									"type": "text",
									"description": "Returns images where the title ends with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[title.regex]",
									"value": "^(catgirl|neko)",
									"type": "text",
									"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[title.iregex]",
									"value": "^(catgirl|neko)",
									"type": "text",
									"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[ageRating]",
									"value": "sfw",
									"type": "text",
									"description": "Returns images with the selected age rating (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[ageRating.exact]",
									"value": "sfw",
									"type": "text",
									"description": "Returns images with the selected age rating (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[ageRating.in]",
									"value": "sfw,questionable,borderline,nsfw",
									"type": "text",
									"description": "Returns images with any of the age ratings selected.",
									"disabled": true
								},
								{
									"key": "filter[ageRating.regex]",
									"value": "sfw$",
									"type": "text",
									"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[ageRating.iregex]",
									"value": "sfw$",
									"type": "text",
									"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[height]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with the specified height (in px).",
									"disabled": true
								},
								{
									"key": "filter[height.lt]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a height lower than the one specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[height.lte]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a height equal or lower than what specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[height.gt]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a height greater than what specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[height.gte]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a height equal or greater than the one specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[width]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with the specified width (in px).",
									"disabled": true
								},
								{
									"key": "filter[width.lt]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a width lower than the one specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[width.lte]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a width equal or lower than what specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[width.gt]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a width greater than what specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[width.gte]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a width equal or greater than the one specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[aspectRatio]",
									"value": "2:8",
									"type": "text",
									"description": "Returns images with the specified aspect ratio.",
									"disabled": true
								},
								{
									"key": "filter[aspectRatio.startswith]",
									"value": "2:",
									"type": "text",
									"description": "Returns images where the aspect ratio starts with the selected value.",
									"disabled": true
								},
								{
									"key": "filter[aspectRatio.endswith]",
									"value": ":5",
									"type": "text",
									"description": "Returns images where the aspect ratio ends with the selected value.",
									"disabled": true
								},
								{
									"key": "filter[aspectRatio.regex]",
									"value": "(^2:|:5$)",
									"type": "text",
									"description": "Returns images where the aspect ratio matches the PostgreSQL regular expression.",
									"disabled": true
								},
								{
									"key": "filter[isOriginal]",
									"value": "true",
									"type": "text",
									"description": "Returns images drawn by the artist who created the characters (official images).",
									"disabled": true
								},
								{
									"key": "filter[isOriginal.isnull]",
									"value": "false",
									"type": "text",
									"description": "Returns images where the `isOriginal` attributes is null.",
									"disabled": true
								},
								{
									"key": "filter[isVerified]",
									"value": "true",
									"type": "text",
									"description": "Returns images that were manually quality-checked by administrators.",
									"disabled": true
								},
								{
									"key": "filter[sourceName]",
									"value": "Twitter",
									"type": "text",
									"description": "Returns images where the source name matches the selected one (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceName.exact]",
									"value": "Twitter",
									"type": "text",
									"description": "Returns images where the source name matches the selected one (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceName.contains]",
									"value": "Twit",
									"type": "text",
									"description": "Returns images where the source name contains the specified value (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceName.icontains]",
									"value": "Twit",
									"type": "text",
									"description": "Returns images where the source name contains the specified value (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceName.startswith]",
									"value": "Twit",
									"type": "text",
									"description": "Returns images where the source name starts with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[sourceName.endswith]",
									"value": "tter",
									"type": "text",
									"description": "Returns images where the source name ends with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[sourceName.isnull]",
									"value": "false",
									"type": "text",
									"description": "Returns images where the source name is or is not null.",
									"disabled": true
								},
								{
									"key": "filter[sourceName.regex]",
									"value": "(Twitter|Pixiv)",
									"type": "text",
									"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceName.iregex]",
									"value": "(Twitter|Pixiv)",
									"type": "text",
									"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl]",
									"value": "https://twitter.com/someuser/status/8094580394850",
									"type": "text",
									"description": "Returns images where the source URL is equal to the specified value (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.exact]",
									"value": "https://twitter.com/someuser/status/8094580394850",
									"type": "text",
									"description": "Returns images where the source URL is equal to the specified value (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.contains]",
									"value": "twitter.com",
									"type": "text",
									"description": "Returns images where the source URL contains the specified value (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.icontains]",
									"value": "twitter.com",
									"type": "text",
									"description": "Returns images where the source URL contains the specified value (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.startswith]",
									"value": "https://twitter.com",
									"type": "text",
									"description": "Returns images where the source URL starts with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.endswith]",
									"value": "https://twitter.com",
									"type": "text",
									"description": "Returns images where the source URL ends with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.isnull]",
									"value": "false",
									"type": "text",
									"description": "Returns images where the source URL is or is not null.",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.regex]",
									"value": "^https://twitter.com",
									"type": "text",
									"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.iregex]",
									"value": "^https://twitter.com",
									"type": "text",
									"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-insensitive).",
									"disabled": true
								}
							]
						},
						"description": "This endpoint returns all images in the API. You can search using the `filter[search]` query parameter, filter using the `filter[field_name.lookup_expr]` query parameters, sort the response using the `sort` query parameter, or paginate the results using the `page[limit]` and `page[offset]` query parameters."
					},
					"response": [
						{
							"id": "b204d56e-167e-4574-b468-75ce2ae32007",
							"name": "Get all images with sort",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/images?sort=createdAt",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"images"
									],
									"query": [
										{
											"key": "sort",
											"value": "createdAt",
											"description": "The order in which the items will be returned. Prepend a - character to an item to inverse the sort order (for that item)."
										},
										{
											"key": "included",
											"value": "uploader,characters,categories,liked-by",
											"type": "text",
											"description": "The included resources.",
											"disabled": true
										},
										{
											"key": "page[limit]",
											"value": "10",
											"type": "text",
											"description": "The amount of items returned per page.",
											"disabled": true
										},
										{
											"key": "page[offset]",
											"value": "0",
											"type": "text",
											"description": "The amount of items to skip.",
											"disabled": true
										},
										{
											"key": "filter[search]",
											"value": "catgirl eating rice",
											"description": "Search for an image by it's title.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "filter[id]",
											"value": "af52a61b-843c-481e-a173-ad31eedaa68e",
											"type": "text",
											"description": "Filter for an image with this exact ID. Is preferable to use the `Get image by ID` endpoint instead of using this filter.",
											"disabled": true
										},
										{
											"key": "filter[id.in]",
											"value": "af52a61b-843c-481e-a173-ad31eedaa68e,fa216a8e-9bab-4d14-b079-5b30db2b18bd",
											"type": "text",
											"description": "Returns images with any of the IDs selected. As this parameter is a filter, no 404 error is returned if one or more IDs do not match any image.",
											"disabled": true
										},
										{
											"key": "filter[id.regex]",
											"value": "(^af52a61b|^fa216a8e)",
											"type": "text",
											"description": "Returns images matching a PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[id.iregex]",
											"value": "(^af52a61b|^fa216a8e)",
											"type": "text",
											"description": "Returns images matching a PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title]",
											"value": "Catgirl cooking rice",
											"type": "text",
											"description": "Returns images where the title is equal to the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.iexact]",
											"value": "Catgirl cooking rice",
											"type": "text",
											"description": "Returns images where the title is equal to the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.contains]",
											"value": "Catgirl cooking",
											"type": "text",
											"description": "Returns images where the title contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.icontains]",
											"value": "catgirl cooking",
											"type": "text",
											"description": "Returns images where the title contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.startswith]",
											"value": "catgirl",
											"type": "text",
											"description": "Returns images where the title starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[title.endswith]",
											"value": "cooking",
											"type": "text",
											"description": "Returns images where the title ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[title.regex]",
											"value": "^(catgirl|neko)",
											"type": "text",
											"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.iregex]",
											"value": "^(catgirl|neko)",
											"type": "text",
											"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating]",
											"value": "sfw",
											"type": "text",
											"description": "Returns images with the selected age rating (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.exact]",
											"value": "sfw",
											"type": "text",
											"description": "Returns images with the selected age rating (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.in]",
											"value": "sfw,questionable,borderline,nsfw",
											"type": "text",
											"description": "Returns images with any of the age ratings selected.",
											"disabled": true
										},
										{
											"key": "filter[ageRating.regex]",
											"value": "sfw$",
											"type": "text",
											"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.iregex]",
											"value": "sfw$",
											"type": "text",
											"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[height]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with the specified height (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.lt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height lower than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.lte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height equal or lower than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.gt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height greater than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.gte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height equal or greater than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with the specified width (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.lt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width lower than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.lte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width equal or lower than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.gt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width greater than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.gte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width equal or greater than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio]",
											"value": "2:8",
											"type": "text",
											"description": "Returns images with the specified aspect ratio.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.startswith]",
											"value": "2:",
											"type": "text",
											"description": "Returns images where the aspect ratio starts with the selected value.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.endswith]",
											"value": ":5",
											"type": "text",
											"description": "Returns images where the aspect ratio ends with the selected value.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.regex]",
											"value": "(^2:|:5$)",
											"type": "text",
											"description": "Returns images where the aspect ratio matches the PostgreSQL regular expression.",
											"disabled": true
										},
										{
											"key": "filter[isOriginal]",
											"value": "true",
											"type": "text",
											"description": "Returns images drawn by the artist who created the characters (official images).",
											"disabled": true
										},
										{
											"key": "filter[isOriginal.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the `isOriginal` attributes is null.",
											"disabled": true
										},
										{
											"key": "filter[isVerified]",
											"value": "true",
											"type": "text",
											"description": "Returns images that were manually quality-checked by administrators.",
											"disabled": true
										},
										{
											"key": "filter[sourceName]",
											"value": "Twitter",
											"type": "text",
											"description": "Returns images where the source name matches the selected one (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.exact]",
											"value": "Twitter",
											"type": "text",
											"description": "Returns images where the source name matches the selected one (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.contains]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.icontains]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.startswith]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.endswith]",
											"value": "tter",
											"type": "text",
											"description": "Returns images where the source name ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the source name is or is not null.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.regex]",
											"value": "(Twitter|Pixiv)",
											"type": "text",
											"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.iregex]",
											"value": "(Twitter|Pixiv)",
											"type": "text",
											"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl]",
											"value": "https://twitter.com/someuser/status/8094580394850",
											"type": "text",
											"description": "Returns images where the source URL is equal to the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.exact]",
											"value": "https://twitter.com/someuser/status/8094580394850",
											"type": "text",
											"description": "Returns images where the source URL is equal to the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.contains]",
											"value": "twitter.com",
											"type": "text",
											"description": "Returns images where the source URL contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.icontains]",
											"value": "twitter.com",
											"type": "text",
											"description": "Returns images where the source URL contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.startswith]",
											"value": "https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.endswith]",
											"value": "https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the source URL is or is not null.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.regex]",
											"value": "^https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.iregex]",
											"value": "^https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/vnd.api+json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"links\": {\n        \"first\": \"https://api.nekosapi.com/v2/images\",\n        \"last\": \"https://api.nekosapi.com/v2/images?page%5Blimit%5D=10\",\n        \"next\": null,\n        \"prev\": null\n    },\n    \"data\": [\n        {\n            \"type\": \"image\",\n            \"id\": \"cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0\",\n            \"attributes\": {\n                \"file\": \"https://cdn.nekosapi.com/uploads/images/4RJEIO5TYBCZ3FVNEV7G3J6XVM.webp\",\n                \"title\": \"Categirl with white dress\",\n                \"colors\": {\n                    \"primary\": \"#ffffff\",\n                    \"dominant\": \"#ffffff\"\n                },\n                \"source\": {\n                    \"name\": \"Twitter\",\n                    \"url\": \"https://twitter.com/someuser/status/897298439872\"\n                },\n                \"dimens\": {\n                    \"height\": 2048,\n                    \"width\": 1464,\n                    \"aspectRatio\": null\n                },\n                \"isOriginal\": false,\n                \"isVerified\": false,\n                \"ageRating\": \"sfw\",\n                \"timestamps\": {\n                    \"created\": \"2023-01-26T05:39:20.717117Z\",\n                    \"updated\": \"2023-02-02T19:50:41.305832Z\"\n                }\n            },\n            \"relationships\": {\n                \"uploader\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/uploader\",\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/uploader\"\n                    },\n                    \"data\": {\n                        \"type\": \"user\",\n                        \"id\": \"8fad93cd-4a9c-4e71-b21f-6eb4efebb3db\"\n                    }\n                },\n                \"artist\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/artist\",\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/artist\"\n                    },\n                    \"data\": {\n                        \"type\": \"artist\",\n                        \"id\": \"500c5ecf-8d83-4333-8f0f-207941aaa552\"\n                    }\n                },\n                \"categories\": {\n                    \"meta\": {\n                        \"count\": 1\n                    },\n                    \"data\": [\n                        {\n                            \"type\": \"category\",\n                            \"id\": \"60304e04-6b0b-4930-a3dc-ba8d9e36d160\"\n                        }\n                    ],\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/categories\",\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/categories\"\n                    }\n                },\n                \"characters\": {\n                    \"meta\": {\n                        \"count\": 1\n                    },\n                    \"data\": [\n                        {\n                            \"type\": \"character\",\n                            \"id\": \"6106713f-2275-4208-be91-bcba1fabbbad\"\n                        }\n                    ],\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/characters\",\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/characters\"\n                    }\n                },\n                \"likedBy\": {\n                    \"meta\": {\n                        \"count\": 0\n                    },\n                    \"data\": [],\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/liked-by\",\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/liked-by\"\n                    }\n                }\n            },\n            \"links\": {\n                \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0\"\n            }\n        }\n    ],\n    \"included\": [\n        {\n            \"type\": \"artist\",\n            \"id\": \"500c5ecf-8d83-4333-8f0f-207941aaa552\",\n            \"attributes\": {\n                \"name\": \"さんぱち\",\n                \"aliases\": [\n                    \"hatizyuusan\"\n                ],\n                \"imageUrl\": \"https://pbs.twimg.com/profile_images/1538894198732357633/kRwkCnLb_400x400.jpg\",\n                \"officialLinks\": [\n                    \"https://twitter.com/hatizyuusan\"\n                ]\n            },\n            \"relationships\": {\n                \"images\": {\n                    \"links\": {\n                        \"self\": \"http://localhost:8000/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/relationships/images\",\n                        \"related\": \"http://localhost:8000/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/images\"\n                    }\n                },\n                \"followers\": {\n                    \"links\": {\n                        \"self\": \"http://localhost:8000/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/relationships/followers\",\n                        \"related\": \"http://localhost:8000/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/followers\"\n                    }\n                }\n            },\n            \"links\": {\n                \"self\": \"http://localhost:8000/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552\"\n            }\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"count\": 1,\n            \"limit\": 10,\n            \"offset\": 0\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "cc100081-7769-44ef-8481-ea1774f41e12"
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "client_authentication",
				"value": "body",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code_with_pkce",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "read write groups",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{PASSWORD}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{USERNAME}}",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{CLIENT_SECRET}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{CLIENT_ID}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{BASE_URL}}/auth/token",
				"type": "string"
			},
			{
				"key": "useBrowser",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "tokenName",
				"value": "Access Token",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b7d915d4-d0bd-488e-93ea-4c2465b91d01",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "977bbc7c-182c-498d-baaf-10053765b13e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "8633a03a-943c-41a4-adf0-988180b906b4",
			"key": "BASE_URL",
			"value": "http://localhost:8000/v2",
			"type": "string"
		}
	]
}