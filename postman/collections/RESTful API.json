{
	"info": {
		"_postman_id": "bfd6d329-a020-486a-aaa8-c53b33e9aa85",
		"name": "RESTful API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "19757005-bfd6d329-a020-486a-aaa8-c53b33e9aa85"
	},
	"item": [
		{
			"name": "Images",
			"item": [
				{
					"name": "Get all images",
					"id": "459d2c67-e31b-456d-8e7a-23640059e901",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/images",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"images"
							],
							"query": [
								{
									"key": "sort",
									"value": "createdAt,updatedAt,height,width,ageRating,title,isOriginal,isVerified",
									"type": "text",
									"description": "The order in which the items will be returned. Prepend a - character to an item to inverse the sort order (for that item).",
									"disabled": true
								},
								{
									"key": "include",
									"value": "uploader,characters,categories,liked-by",
									"type": "text",
									"description": "The included resources.",
									"disabled": true
								},
								{
									"key": "page[limit]",
									"value": "10",
									"type": "text",
									"description": "The amount of items returned per page.",
									"disabled": true
								},
								{
									"key": "page[offset]",
									"value": "0",
									"type": "text",
									"description": "The amount of items to skip.",
									"disabled": true
								},
								{
									"key": "filter[search]",
									"value": "catgirl eating rice",
									"description": "Search for an image by it's title.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "filter[id]",
									"value": "af52a61b-843c-481e-a173-ad31eedaa68e",
									"type": "text",
									"description": "Filter for an image with this exact ID. Is preferable to use the `Get image by ID` endpoint instead of using this filter.",
									"disabled": true
								},
								{
									"key": "filter[id.in]",
									"value": "af52a61b-843c-481e-a173-ad31eedaa68e,fa216a8e-9bab-4d14-b079-5b30db2b18bd",
									"type": "text",
									"description": "Returns images with any of the IDs selected. As this parameter is a filter, no 404 error is returned if one or more IDs do not match any image.",
									"disabled": true
								},
								{
									"key": "filter[id.regex]",
									"value": "(^af52a61b|^fa216a8e)",
									"type": "text",
									"description": "Returns images matching a PostgreSQL regular expression (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[id.iregex]",
									"value": "(^af52a61b|^fa216a8e)",
									"type": "text",
									"description": "Returns images matching a PostgreSQL regular expression (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[title]",
									"value": "Catgirl cooking rice",
									"type": "text",
									"description": "Returns images where the title is equal to the specified value (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[title.iexact]",
									"value": "Catgirl cooking rice",
									"type": "text",
									"description": "Returns images where the title is equal to the specified value (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[title.contains]",
									"value": "Catgirl cooking",
									"type": "text",
									"description": "Returns images where the title contains the specified value (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[title.icontains]",
									"value": "catgirl cooking",
									"type": "text",
									"description": "Returns images where the title contains the specified value (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[title.startswith]",
									"value": "catgirl",
									"type": "text",
									"description": "Returns images where the title starts with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[title.endswith]",
									"value": "cooking",
									"type": "text",
									"description": "Returns images where the title ends with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[title.regex]",
									"value": "^(catgirl|neko)",
									"type": "text",
									"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[title.iregex]",
									"value": "^(catgirl|neko)",
									"type": "text",
									"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[ageRating]",
									"value": "sfw",
									"type": "text",
									"description": "Returns images with the selected age rating (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[ageRating.exact]",
									"value": "sfw",
									"type": "text",
									"description": "Returns images with the selected age rating (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[ageRating.in]",
									"value": "sfw,questionable,borderline,nsfw",
									"type": "text",
									"description": "Returns images with any of the age ratings selected.",
									"disabled": true
								},
								{
									"key": "filter[ageRating.regex]",
									"value": "sfw$",
									"type": "text",
									"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[ageRating.iregex]",
									"value": "sfw$",
									"type": "text",
									"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[height]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with the specified height (in px).",
									"disabled": true
								},
								{
									"key": "filter[height.lt]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a height lower than the one specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[height.lte]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a height equal or lower than what specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[height.gt]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a height greater than what specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[height.gte]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a height equal or greater than the one specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[width]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with the specified width (in px).",
									"disabled": true
								},
								{
									"key": "filter[width.lt]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a width lower than the one specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[width.lte]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a width equal or lower than what specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[width.gt]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a width greater than what specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[width.gte]",
									"value": "2000",
									"type": "text",
									"description": "Returns images with a width equal or greater than the one specified (in px).",
									"disabled": true
								},
								{
									"key": "filter[aspectRatio]",
									"value": "2:8",
									"type": "text",
									"description": "Returns images with the specified aspect ratio.",
									"disabled": true
								},
								{
									"key": "filter[aspectRatio.startswith]",
									"value": "2:",
									"type": "text",
									"description": "Returns images where the aspect ratio starts with the selected value.",
									"disabled": true
								},
								{
									"key": "filter[aspectRatio.endswith]",
									"value": ":5",
									"type": "text",
									"description": "Returns images where the aspect ratio ends with the selected value.",
									"disabled": true
								},
								{
									"key": "filter[aspectRatio.regex]",
									"value": "(^2:|:5$)",
									"type": "text",
									"description": "Returns images where the aspect ratio matches the PostgreSQL regular expression.",
									"disabled": true
								},
								{
									"key": "filter[isOriginal]",
									"value": "true",
									"type": "text",
									"description": "Returns images drawn by the artist who created the characters (official images).",
									"disabled": true
								},
								{
									"key": "filter[isOriginal.isnull]",
									"value": "false",
									"type": "text",
									"description": "Returns images where the `isOriginal` attributes is null.",
									"disabled": true
								},
								{
									"key": "filter[isVerified]",
									"value": "true",
									"type": "text",
									"description": "Returns images that were manually quality-checked by administrators.",
									"disabled": true
								},
								{
									"key": "filter[sourceName]",
									"value": "Twitter",
									"type": "text",
									"description": "Returns images where the source name matches the selected one (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceName.exact]",
									"value": "Twitter",
									"type": "text",
									"description": "Returns images where the source name matches the selected one (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceName.contains]",
									"value": "Twit",
									"type": "text",
									"description": "Returns images where the source name contains the specified value (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceName.icontains]",
									"value": "Twit",
									"type": "text",
									"description": "Returns images where the source name contains the specified value (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceName.startswith]",
									"value": "Twit",
									"type": "text",
									"description": "Returns images where the source name starts with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[sourceName.endswith]",
									"value": "tter",
									"type": "text",
									"description": "Returns images where the source name ends with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[sourceName.isnull]",
									"value": "false",
									"type": "text",
									"description": "Returns images where the source name is or is not null.",
									"disabled": true
								},
								{
									"key": "filter[sourceName.regex]",
									"value": "(Twitter|Pixiv)",
									"type": "text",
									"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceName.iregex]",
									"value": "(Twitter|Pixiv)",
									"type": "text",
									"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl]",
									"value": "https://twitter.com/someuser/status/8094580394850",
									"type": "text",
									"description": "Returns images where the source URL is equal to the specified value (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.exact]",
									"value": "https://twitter.com/someuser/status/8094580394850",
									"type": "text",
									"description": "Returns images where the source URL is equal to the specified value (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.contains]",
									"value": "twitter.com",
									"type": "text",
									"description": "Returns images where the source URL contains the specified value (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.icontains]",
									"value": "twitter.com",
									"type": "text",
									"description": "Returns images where the source URL contains the specified value (case-insensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.startswith]",
									"value": "https://twitter.com",
									"type": "text",
									"description": "Returns images where the source URL starts with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.endswith]",
									"value": "https://twitter.com",
									"type": "text",
									"description": "Returns images where the source URL ends with the specified value.",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.isnull]",
									"value": "false",
									"type": "text",
									"description": "Returns images where the source URL is or is not null.",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.regex]",
									"value": "^https://twitter.com",
									"type": "text",
									"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-sensitive).",
									"disabled": true
								},
								{
									"key": "filter[sourceUrl.iregex]",
									"value": "^https://twitter.com",
									"type": "text",
									"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-insensitive).",
									"disabled": true
								}
							]
						},
						"description": "This endpoint returns all images in the API. You can search using the `filter[search]` query parameter, filter using the `filter[field_name.lookup_expr]` query parameters, sort the response using the `sort` query parameter, or paginate the results using the `page[limit]` and `page[offset]` query parameters."
					},
					"response": [
						{
							"id": "e5e9a636-3b57-4d17-a571-694ef0d347b3",
							"name": "Get all images",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:8000/v2/images?page[limit]=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"v2",
										"images"
									],
									"query": [
										{
											"key": "sort",
											"value": "createdAt,updatedAt,height,width,ageRating,title,isOriginal,isVerified",
											"type": "text",
											"description": "The order in which the items will be returned. Prepend a - character to an item to inverse the sort order (for that item).",
											"disabled": true
										},
										{
											"key": "include",
											"value": "uploader,characters,categories,liked-by",
											"type": "text",
											"description": "The included resources.",
											"disabled": true
										},
										{
											"key": "page[limit]",
											"value": "1",
											"description": "The amount of items returned per page."
										},
										{
											"key": "page[offset]",
											"value": "0",
											"type": "text",
											"description": "The amount of items to skip.",
											"disabled": true
										},
										{
											"key": "filter[search]",
											"value": "catgirl eating rice",
											"description": "Search for an image by it's title.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "filter[id]",
											"value": "af52a61b-843c-481e-a173-ad31eedaa68e",
											"type": "text",
											"description": "Filter for an image with this exact ID. Is preferable to use the `Get image by ID` endpoint instead of using this filter.",
											"disabled": true
										},
										{
											"key": "filter[id.in]",
											"value": "af52a61b-843c-481e-a173-ad31eedaa68e,fa216a8e-9bab-4d14-b079-5b30db2b18bd",
											"type": "text",
											"description": "Returns images with any of the IDs selected. As this parameter is a filter, no 404 error is returned if one or more IDs do not match any image.",
											"disabled": true
										},
										{
											"key": "filter[id.regex]",
											"value": "(^af52a61b|^fa216a8e)",
											"type": "text",
											"description": "Returns images matching a PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[id.iregex]",
											"value": "(^af52a61b|^fa216a8e)",
											"type": "text",
											"description": "Returns images matching a PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title]",
											"value": "Catgirl cooking rice",
											"type": "text",
											"description": "Returns images where the title is equal to the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.iexact]",
											"value": "Catgirl cooking rice",
											"type": "text",
											"description": "Returns images where the title is equal to the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.contains]",
											"value": "Catgirl cooking",
											"type": "text",
											"description": "Returns images where the title contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.icontains]",
											"value": "catgirl cooking",
											"type": "text",
											"description": "Returns images where the title contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.startswith]",
											"value": "catgirl",
											"type": "text",
											"description": "Returns images where the title starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[title.endswith]",
											"value": "cooking",
											"type": "text",
											"description": "Returns images where the title ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[title.regex]",
											"value": "^(catgirl|neko)",
											"type": "text",
											"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.iregex]",
											"value": "^(catgirl|neko)",
											"type": "text",
											"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating]",
											"value": "sfw",
											"type": "text",
											"description": "Returns images with the selected age rating (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.exact]",
											"value": "sfw",
											"type": "text",
											"description": "Returns images with the selected age rating (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.in]",
											"value": "sfw,questionable,borderline,nsfw",
											"type": "text",
											"description": "Returns images with any of the age ratings selected.",
											"disabled": true
										},
										{
											"key": "filter[ageRating.regex]",
											"value": "sfw$",
											"type": "text",
											"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.iregex]",
											"value": "sfw$",
											"type": "text",
											"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[height]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with the specified height (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.lt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height lower than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.lte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height equal or lower than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.gt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height greater than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.gte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height equal or greater than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with the specified width (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.lt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width lower than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.lte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width equal or lower than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.gt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width greater than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.gte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width equal or greater than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio]",
											"value": "2:8",
											"type": "text",
											"description": "Returns images with the specified aspect ratio.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.startswith]",
											"value": "2:",
											"type": "text",
											"description": "Returns images where the aspect ratio starts with the selected value.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.endswith]",
											"value": ":5",
											"type": "text",
											"description": "Returns images where the aspect ratio ends with the selected value.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.regex]",
											"value": "(^2:|:5$)",
											"type": "text",
											"description": "Returns images where the aspect ratio matches the PostgreSQL regular expression.",
											"disabled": true
										},
										{
											"key": "filter[isOriginal]",
											"value": "true",
											"type": "text",
											"description": "Returns images drawn by the artist who created the characters (official images).",
											"disabled": true
										},
										{
											"key": "filter[isOriginal.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the `isOriginal` attributes is null.",
											"disabled": true
										},
										{
											"key": "filter[isVerified]",
											"value": "true",
											"type": "text",
											"description": "Returns images that were manually quality-checked by administrators.",
											"disabled": true
										},
										{
											"key": "filter[sourceName]",
											"value": "Twitter",
											"type": "text",
											"description": "Returns images where the source name matches the selected one (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.exact]",
											"value": "Twitter",
											"type": "text",
											"description": "Returns images where the source name matches the selected one (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.contains]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.icontains]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.startswith]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.endswith]",
											"value": "tter",
											"type": "text",
											"description": "Returns images where the source name ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the source name is or is not null.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.regex]",
											"value": "(Twitter|Pixiv)",
											"type": "text",
											"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.iregex]",
											"value": "(Twitter|Pixiv)",
											"type": "text",
											"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl]",
											"value": "https://twitter.com/someuser/status/8094580394850",
											"type": "text",
											"description": "Returns images where the source URL is equal to the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.exact]",
											"value": "https://twitter.com/someuser/status/8094580394850",
											"type": "text",
											"description": "Returns images where the source URL is equal to the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.contains]",
											"value": "twitter.com",
											"type": "text",
											"description": "Returns images where the source URL contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.icontains]",
											"value": "twitter.com",
											"type": "text",
											"description": "Returns images where the source URL contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.startswith]",
											"value": "https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.endswith]",
											"value": "https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the source URL is or is not null.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.regex]",
											"value": "^https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.iregex]",
											"value": "^https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										}
									]
								},
								"description": "This endpoint returns all images in the API. You can search using the `filter[search]` query parameter, filter using the `filter[field_name.lookup_expr]` query parameters, sort the response using the `sort` query parameter, or paginate the results using the `page[limit]` and `page[offset]` query parameters."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/vnd.api+json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"links\": {\r\n        \"first\": \"https://api.nekosapi.com/v2/images?page%5Blimit%5D=1\",\r\n        \"last\": \"https://api.nekosapi.com/v2/images?page%5Blimit%5D=1&page%5Boffset%5D=8\",\r\n        \"next\": \"https://api.nekosapi.com/v2/images?page%5Blimit%5D=1&page%5Boffset%5D=1\",\r\n        \"prev\": null\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"type\": \"image\",\r\n            \"id\": \"cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0\",\r\n            \"attributes\": {\r\n                \"file\": \"https://cdn.nekosapi.com/uploads/images/4RJEIO5TYBCZ3FVNEV7G3J6XVM.webp\",\r\n                \"title\": \"Categirl with white dress\",\r\n                \"colors\": {\r\n                    \"primary\": null,\r\n                    \"dominant\": null\r\n                },\r\n                \"source\": {\r\n                    \"name\": null,\r\n                    \"url\": null\r\n                },\r\n                \"dimens\": {\r\n                    \"height\": 0,\r\n                    \"width\": 0,\r\n                    \"aspectRatio\": null\r\n                },\r\n                \"isOriginal\": false,\r\n                \"isVerified\": false,\r\n                \"ageRating\": \"sfw\",\r\n                \"timestamps\": {\r\n                    \"created\": \"2023-01-26T05:39:20.717117Z\",\r\n                    \"updated\": \"2023-02-02T19:50:41.305832Z\"\r\n                }\r\n            },\r\n            \"relationships\": {\r\n                \"uploader\": {\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/uploader\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/uploader\"\r\n                    },\r\n                    \"data\": {\r\n                        \"type\": \"user\",\r\n                        \"id\": \"8fad93cd-4a9c-4e71-b21f-6eb4efebb3db\"\r\n                    }\r\n                },\r\n                \"artist\": {\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/artist\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/artist\"\r\n                    },\r\n                    \"data\": {\r\n                        \"type\": \"artist\",\r\n                        \"id\": \"500c5ecf-8d83-4333-8f0f-207941aaa552\"\r\n                    }\r\n                },\r\n                \"categories\": {\r\n                    \"meta\": {\r\n                        \"count\": 1\r\n                    },\r\n                    \"data\": [\r\n                        {\r\n                            \"type\": \"category\",\r\n                            \"id\": \"60304e04-6b0b-4930-a3dc-ba8d9e36d160\"\r\n                        }\r\n                    ],\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/categories\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/categories\"\r\n                    }\r\n                },\r\n                \"characters\": {\r\n                    \"meta\": {\r\n                        \"count\": 1\r\n                    },\r\n                    \"data\": [\r\n                        {\r\n                            \"type\": \"character\",\r\n                            \"id\": \"6106713f-2275-4208-be91-bcba1fabbbad\"\r\n                        }\r\n                    ],\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/characters\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/characters\"\r\n                    }\r\n                },\r\n                \"likedBy\": {\r\n                    \"meta\": {\r\n                        \"count\": 0\r\n                    },\r\n                    \"data\": [],\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/liked-by\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/liked-by\"\r\n                    }\r\n                }\r\n            },\r\n            \"links\": {\r\n                \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0\"\r\n            }\r\n        }\r\n    ],\r\n    \"included\": [\r\n        {\r\n            \"type\": \"artist\",\r\n            \"id\": \"500c5ecf-8d83-4333-8f0f-207941aaa552\",\r\n            \"attributes\": {\r\n                \"name\": \"さんぱち\",\r\n                \"aliases\": [\r\n                    \"hatizyuusan\"\r\n                ],\r\n                \"imageUrl\": \"https://pbs.twimg.com/profile_images/1538894198732357633/kRwkCnLb_400x400.jpg\",\r\n                \"officialLinks\": [\r\n                    \"https://twitter.com/hatizyuusan\"\r\n                ]\r\n            },\r\n            \"relationships\": {\r\n                \"images\": {\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/relationships/images\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/images\"\r\n                    }\r\n                },\r\n                \"followers\": {\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/relationships/followers\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/followers\"\r\n                    }\r\n                }\r\n            },\r\n            \"links\": {\r\n                \"self\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552\"\r\n            }\r\n        }\r\n    ],\r\n    \"meta\": {\r\n        \"pagination\": {\r\n            \"count\": 8,\r\n            \"limit\": 1,\r\n            \"offset\": 0\r\n        }\r\n    }\r\n}"
						},
						{
							"id": "b204d56e-167e-4574-b468-75ce2ae32007",
							"name": "Get all images with sort",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/images?sort=createdAt",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"images"
									],
									"query": [
										{
											"key": "sort",
											"value": "createdAt",
											"description": "The order in which the items will be returned. Prepend a - character to an item to inverse the sort order (for that item)."
										},
										{
											"key": "include",
											"value": "uploader,characters,categories,liked-by",
											"type": "text",
											"description": "The included resources.",
											"disabled": true
										},
										{
											"key": "page[limit]",
											"value": "10",
											"type": "text",
											"description": "The amount of items returned per page.",
											"disabled": true
										},
										{
											"key": "page[offset]",
											"value": "0",
											"type": "text",
											"description": "The amount of items to skip.",
											"disabled": true
										},
										{
											"key": "filter[search]",
											"value": "catgirl eating rice",
											"description": "Search for an image by it's title.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "filter[id]",
											"value": "af52a61b-843c-481e-a173-ad31eedaa68e",
											"type": "text",
											"description": "Filter for an image with this exact ID. Is preferable to use the `Get image by ID` endpoint instead of using this filter.",
											"disabled": true
										},
										{
											"key": "filter[id.in]",
											"value": "af52a61b-843c-481e-a173-ad31eedaa68e,fa216a8e-9bab-4d14-b079-5b30db2b18bd",
											"type": "text",
											"description": "Returns images with any of the IDs selected. As this parameter is a filter, no 404 error is returned if one or more IDs do not match any image.",
											"disabled": true
										},
										{
											"key": "filter[id.regex]",
											"value": "(^af52a61b|^fa216a8e)",
											"type": "text",
											"description": "Returns images matching a PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[id.iregex]",
											"value": "(^af52a61b|^fa216a8e)",
											"type": "text",
											"description": "Returns images matching a PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title]",
											"value": "Catgirl cooking rice",
											"type": "text",
											"description": "Returns images where the title is equal to the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.iexact]",
											"value": "Catgirl cooking rice",
											"type": "text",
											"description": "Returns images where the title is equal to the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.contains]",
											"value": "Catgirl cooking",
											"type": "text",
											"description": "Returns images where the title contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.icontains]",
											"value": "catgirl cooking",
											"type": "text",
											"description": "Returns images where the title contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.startswith]",
											"value": "catgirl",
											"type": "text",
											"description": "Returns images where the title starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[title.endswith]",
											"value": "cooking",
											"type": "text",
											"description": "Returns images where the title ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[title.regex]",
											"value": "^(catgirl|neko)",
											"type": "text",
											"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.iregex]",
											"value": "^(catgirl|neko)",
											"type": "text",
											"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating]",
											"value": "sfw",
											"type": "text",
											"description": "Returns images with the selected age rating (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.exact]",
											"value": "sfw",
											"type": "text",
											"description": "Returns images with the selected age rating (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.in]",
											"value": "sfw,questionable,borderline,nsfw",
											"type": "text",
											"description": "Returns images with any of the age ratings selected.",
											"disabled": true
										},
										{
											"key": "filter[ageRating.regex]",
											"value": "sfw$",
											"type": "text",
											"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.iregex]",
											"value": "sfw$",
											"type": "text",
											"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[height]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with the specified height (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.lt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height lower than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.lte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height equal or lower than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.gt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height greater than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.gte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height equal or greater than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with the specified width (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.lt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width lower than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.lte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width equal or lower than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.gt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width greater than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.gte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width equal or greater than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio]",
											"value": "2:8",
											"type": "text",
											"description": "Returns images with the specified aspect ratio.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.startswith]",
											"value": "2:",
											"type": "text",
											"description": "Returns images where the aspect ratio starts with the selected value.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.endswith]",
											"value": ":5",
											"type": "text",
											"description": "Returns images where the aspect ratio ends with the selected value.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.regex]",
											"value": "(^2:|:5$)",
											"type": "text",
											"description": "Returns images where the aspect ratio matches the PostgreSQL regular expression.",
											"disabled": true
										},
										{
											"key": "filter[isOriginal]",
											"value": "true",
											"type": "text",
											"description": "Returns images drawn by the artist who created the characters (official images).",
											"disabled": true
										},
										{
											"key": "filter[isOriginal.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the `isOriginal` attributes is null.",
											"disabled": true
										},
										{
											"key": "filter[isVerified]",
											"value": "true",
											"type": "text",
											"description": "Returns images that were manually quality-checked by administrators.",
											"disabled": true
										},
										{
											"key": "filter[sourceName]",
											"value": "Twitter",
											"type": "text",
											"description": "Returns images where the source name matches the selected one (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.exact]",
											"value": "Twitter",
											"type": "text",
											"description": "Returns images where the source name matches the selected one (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.contains]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.icontains]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.startswith]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.endswith]",
											"value": "tter",
											"type": "text",
											"description": "Returns images where the source name ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the source name is or is not null.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.regex]",
											"value": "(Twitter|Pixiv)",
											"type": "text",
											"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.iregex]",
											"value": "(Twitter|Pixiv)",
											"type": "text",
											"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl]",
											"value": "https://twitter.com/someuser/status/8094580394850",
											"type": "text",
											"description": "Returns images where the source URL is equal to the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.exact]",
											"value": "https://twitter.com/someuser/status/8094580394850",
											"type": "text",
											"description": "Returns images where the source URL is equal to the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.contains]",
											"value": "twitter.com",
											"type": "text",
											"description": "Returns images where the source URL contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.icontains]",
											"value": "twitter.com",
											"type": "text",
											"description": "Returns images where the source URL contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.startswith]",
											"value": "https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.endswith]",
											"value": "https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the source URL is or is not null.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.regex]",
											"value": "^https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.iregex]",
											"value": "^https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/vnd.api+json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"links\": {\n        \"first\": \"https://api.nekosapi.com/v2/images\",\n        \"last\": \"https://api.nekosapi.com/v2/images?page%5Blimit%5D=10\",\n        \"next\": null,\n        \"prev\": null\n    },\n    \"data\": [\n        {\n            \"type\": \"image\",\n            \"id\": \"cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0\",\n            \"attributes\": {\n                \"file\": \"https://cdn.nekosapi.com/uploads/images/4RJEIO5TYBCZ3FVNEV7G3J6XVM.webp\",\n                \"title\": \"Categirl with white dress\",\n                \"colors\": {\n                    \"primary\": \"#ffffff\",\n                    \"dominant\": \"#ffffff\"\n                },\n                \"source\": {\n                    \"name\": \"Twitter\",\n                    \"url\": \"https://twitter.com/someuser/status/897298439872\"\n                },\n                \"dimens\": {\n                    \"height\": 2048,\n                    \"width\": 1464,\n                    \"aspectRatio\": null\n                },\n                \"isOriginal\": false,\n                \"isVerified\": false,\n                \"ageRating\": \"sfw\",\n                \"timestamps\": {\n                    \"created\": \"2023-01-26T05:39:20.717117Z\",\n                    \"updated\": \"2023-02-02T19:50:41.305832Z\"\n                }\n            },\n            \"relationships\": {\n                \"uploader\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/uploader\",\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/uploader\"\n                    },\n                    \"data\": {\n                        \"type\": \"user\",\n                        \"id\": \"8fad93cd-4a9c-4e71-b21f-6eb4efebb3db\"\n                    }\n                },\n                \"artist\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/artist\",\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/artist\"\n                    },\n                    \"data\": {\n                        \"type\": \"artist\",\n                        \"id\": \"500c5ecf-8d83-4333-8f0f-207941aaa552\"\n                    }\n                },\n                \"categories\": {\n                    \"meta\": {\n                        \"count\": 1\n                    },\n                    \"data\": [\n                        {\n                            \"type\": \"category\",\n                            \"id\": \"60304e04-6b0b-4930-a3dc-ba8d9e36d160\"\n                        }\n                    ],\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/categories\",\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/categories\"\n                    }\n                },\n                \"characters\": {\n                    \"meta\": {\n                        \"count\": 1\n                    },\n                    \"data\": [\n                        {\n                            \"type\": \"character\",\n                            \"id\": \"6106713f-2275-4208-be91-bcba1fabbbad\"\n                        }\n                    ],\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/characters\",\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/characters\"\n                    }\n                },\n                \"likedBy\": {\n                    \"meta\": {\n                        \"count\": 0\n                    },\n                    \"data\": [],\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/liked-by\",\n                        \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/liked-by\"\n                    }\n                }\n            },\n            \"links\": {\n                \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0\"\n            }\n        }\n    ],\n    \"included\": [\n        {\n            \"type\": \"artist\",\n            \"id\": \"500c5ecf-8d83-4333-8f0f-207941aaa552\",\n            \"attributes\": {\n                \"name\": \"さんぱち\",\n                \"aliases\": [\n                    \"hatizyuusan\"\n                ],\n                \"imageUrl\": \"https://pbs.twimg.com/profile_images/1538894198732357633/kRwkCnLb_400x400.jpg\",\n                \"officialLinks\": [\n                    \"https://twitter.com/hatizyuusan\"\n                ]\n            },\n            \"relationships\": {\n                \"images\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/relationships/images\",\n                        \"related\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/images\"\n                    }\n                },\n                \"followers\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/relationships/followers\",\n                        \"related\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/followers\"\n                    }\n                }\n            },\n            \"links\": {\n                \"self\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552\"\n            }\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"count\": 1,\n            \"limit\": 10,\n            \"offset\": 0\n        }\n    }\n}"
						},
						{
							"id": "48650f6e-9985-498d-b4ab-6d7c062241e5",
							"name": "Serch for an image",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/images?filter[search]=catgirl",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"images"
									],
									"query": [
										{
											"key": "sort",
											"value": "createdAt,updatedAt,height,width,ageRating,title,isOriginal,isVerified",
											"type": "text",
											"description": "The order in which the items will be returned. Prepend a - character to an item to inverse the sort order (for that item).",
											"disabled": true
										},
										{
											"key": "include",
											"value": "uploader,characters,categories,liked-by",
											"type": "text",
											"description": "The included resources.",
											"disabled": true
										},
										{
											"key": "page[limit]",
											"value": "10",
											"type": "text",
											"description": "The amount of items returned per page.",
											"disabled": true
										},
										{
											"key": "page[offset]",
											"value": "0",
											"type": "text",
											"description": "The amount of items to skip.",
											"disabled": true
										},
										{
											"key": "filter[search]",
											"value": "catgirl",
											"description": "Search for an image by it's title."
										},
										{
											"key": "filter[id]",
											"value": "af52a61b-843c-481e-a173-ad31eedaa68e",
											"type": "text",
											"description": "Filter for an image with this exact ID. Is preferable to use the `Get image by ID` endpoint instead of using this filter.",
											"disabled": true
										},
										{
											"key": "filter[id.in]",
											"value": "af52a61b-843c-481e-a173-ad31eedaa68e,fa216a8e-9bab-4d14-b079-5b30db2b18bd",
											"type": "text",
											"description": "Returns images with any of the IDs selected. As this parameter is a filter, no 404 error is returned if one or more IDs do not match any image.",
											"disabled": true
										},
										{
											"key": "filter[id.regex]",
											"value": "(^af52a61b|^fa216a8e)",
											"type": "text",
											"description": "Returns images matching a PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[id.iregex]",
											"value": "(^af52a61b|^fa216a8e)",
											"type": "text",
											"description": "Returns images matching a PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title]",
											"value": "Catgirl cooking rice",
											"type": "text",
											"description": "Returns images where the title is equal to the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.iexact]",
											"value": "Catgirl cooking rice",
											"type": "text",
											"description": "Returns images where the title is equal to the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.contains]",
											"value": "Catgirl cooking",
											"type": "text",
											"description": "Returns images where the title contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.icontains]",
											"value": "catgirl cooking",
											"type": "text",
											"description": "Returns images where the title contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.startswith]",
											"value": "catgirl",
											"type": "text",
											"description": "Returns images where the title starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[title.endswith]",
											"value": "cooking",
											"type": "text",
											"description": "Returns images where the title ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[title.regex]",
											"value": "^(catgirl|neko)",
											"type": "text",
											"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[title.iregex]",
											"value": "^(catgirl|neko)",
											"type": "text",
											"description": "Returns images where the title matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating]",
											"value": "sfw",
											"type": "text",
											"description": "Returns images with the selected age rating (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.exact]",
											"value": "sfw",
											"type": "text",
											"description": "Returns images with the selected age rating (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.in]",
											"value": "sfw,questionable,borderline,nsfw",
											"type": "text",
											"description": "Returns images with any of the age ratings selected.",
											"disabled": true
										},
										{
											"key": "filter[ageRating.regex]",
											"value": "sfw$",
											"type": "text",
											"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[ageRating.iregex]",
											"value": "sfw$",
											"type": "text",
											"description": "Returns images with the age rating matching the PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[height]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with the specified height (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.lt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height lower than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.lte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height equal or lower than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.gt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height greater than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[height.gte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a height equal or greater than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with the specified width (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.lt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width lower than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.lte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width equal or lower than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.gt]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width greater than what specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[width.gte]",
											"value": "2000",
											"type": "text",
											"description": "Returns images with a width equal or greater than the one specified (in px).",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio]",
											"value": "2:8",
											"type": "text",
											"description": "Returns images with the specified aspect ratio.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.startswith]",
											"value": "2:",
											"type": "text",
											"description": "Returns images where the aspect ratio starts with the selected value.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.endswith]",
											"value": ":5",
											"type": "text",
											"description": "Returns images where the aspect ratio ends with the selected value.",
											"disabled": true
										},
										{
											"key": "filter[aspectRatio.regex]",
											"value": "(^2:|:5$)",
											"type": "text",
											"description": "Returns images where the aspect ratio matches the PostgreSQL regular expression.",
											"disabled": true
										},
										{
											"key": "filter[isOriginal]",
											"value": "true",
											"type": "text",
											"description": "Returns images drawn by the artist who created the characters (official images).",
											"disabled": true
										},
										{
											"key": "filter[isOriginal.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the `isOriginal` attributes is null.",
											"disabled": true
										},
										{
											"key": "filter[isVerified]",
											"value": "true",
											"type": "text",
											"description": "Returns images that were manually quality-checked by administrators.",
											"disabled": true
										},
										{
											"key": "filter[sourceName]",
											"value": "Twitter",
											"type": "text",
											"description": "Returns images where the source name matches the selected one (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.exact]",
											"value": "Twitter",
											"type": "text",
											"description": "Returns images where the source name matches the selected one (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.contains]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.icontains]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.startswith]",
											"value": "Twit",
											"type": "text",
											"description": "Returns images where the source name starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.endswith]",
											"value": "tter",
											"type": "text",
											"description": "Returns images where the source name ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the source name is or is not null.",
											"disabled": true
										},
										{
											"key": "filter[sourceName.regex]",
											"value": "(Twitter|Pixiv)",
											"type": "text",
											"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceName.iregex]",
											"value": "(Twitter|Pixiv)",
											"type": "text",
											"description": "Returns images where the source name matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl]",
											"value": "https://twitter.com/someuser/status/8094580394850",
											"type": "text",
											"description": "Returns images where the source URL is equal to the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.exact]",
											"value": "https://twitter.com/someuser/status/8094580394850",
											"type": "text",
											"description": "Returns images where the source URL is equal to the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.contains]",
											"value": "twitter.com",
											"type": "text",
											"description": "Returns images where the source URL contains the specified value (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.icontains]",
											"value": "twitter.com",
											"type": "text",
											"description": "Returns images where the source URL contains the specified value (case-insensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.startswith]",
											"value": "https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL starts with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.endswith]",
											"value": "https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL ends with the specified value.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.isnull]",
											"value": "false",
											"type": "text",
											"description": "Returns images where the source URL is or is not null.",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.regex]",
											"value": "^https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-sensitive).",
											"disabled": true
										},
										{
											"key": "filter[sourceUrl.iregex]",
											"value": "^https://twitter.com",
											"type": "text",
											"description": "Returns images where the source URL matches the specified PostgreSQL regular expression (case-insensitive).",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/vnd.api+json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"links\": {\r\n        \"first\": \"https://api.nekosapi.com/v2/images?filter%5Bsearch%5D=Catgirl\",\r\n        \"last\": \"https://api.nekosapi.com/v2/images?filter%5Bsearch%5D=Catgirl&page%5Blimit%5D=10\",\r\n        \"next\": null,\r\n        \"prev\": null\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"type\": \"image\",\r\n            \"id\": \"503971d2-5f06-4c00-8929-929d8403d847\",\r\n            \"attributes\": {\r\n                \"file\": \"https://cdn.nekosapi.com/uploads/images/NPUONE4PD5EOTJRBYP6H4KNKQM.webp\",\r\n                \"title\": \"Cute catgirls waking up\",\r\n                \"colors\": {\r\n                    \"primary\": null,\r\n                    \"dominant\": null\r\n                },\r\n                \"source\": {\r\n                    \"name\": null,\r\n                    \"url\": null\r\n                },\r\n                \"dimens\": {\r\n                    \"height\": 0,\r\n                    \"width\": 0,\r\n                    \"aspectRatio\": null\r\n                },\r\n                \"isOriginal\": false,\r\n                \"isVerified\": false,\r\n                \"ageRating\": \"sfw\",\r\n                \"timestamps\": {\r\n                    \"created\": \"2023-02-02T20:13:00.978626Z\",\r\n                    \"updated\": \"2023-02-02T21:25:01.890972Z\"\r\n                }\r\n            },\r\n            \"relationships\": {\r\n                \"uploader\": {\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847/relationships/uploader\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847/uploader\"\r\n                    },\r\n                    \"data\": {\r\n                        \"type\": \"user\",\r\n                        \"id\": \"8fad93cd-4a9c-4e71-b21f-6eb4efebb3db\"\r\n                    }\r\n                },\r\n                \"artist\": {\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847/relationships/artist\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847/artist\"\r\n                    },\r\n                    \"data\": null\r\n                },\r\n                \"categories\": {\r\n                    \"meta\": {\r\n                        \"count\": 0\r\n                    },\r\n                    \"data\": [],\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847/relationships/categories\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847/categories\"\r\n                    }\r\n                },\r\n                \"characters\": {\r\n                    \"meta\": {\r\n                        \"count\": 0\r\n                    },\r\n                    \"data\": [],\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847/relationships/characters\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847/characters\"\r\n                    }\r\n                },\r\n                \"likedBy\": {\r\n                    \"meta\": {\r\n                        \"count\": 0\r\n                    },\r\n                    \"data\": [],\r\n                    \"links\": {\r\n                        \"self\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847/relationships/liked-by\",\r\n                        \"related\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847/liked-by\"\r\n                    }\r\n                }\r\n            },\r\n            \"links\": {\r\n                \"self\": \"https://api.nekosapi.com/v2/images/503971d2-5f06-4c00-8929-929d8403d847\"\r\n            }\r\n        }\r\n    ],\r\n    \"meta\": {\r\n        \"pagination\": {\r\n            \"count\": 1,\r\n            \"limit\": 10,\r\n            \"offset\": 0\r\n        }\r\n    }\r\n}"
						}
					]
				},
				{
					"name": "Get image by ID",
					"id": "1fde6957-198f-49b5-864b-5456410be2f2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/images/:id?include=uploader",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"images",
								":id"
							],
							"query": [
								{
									"key": "include",
									"value": "uploader",
									"description": "The related resources to include in the response.",
									"type": "text"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0",
									"description": "The image's ID"
								}
							]
						}
					},
					"response": [
						{
							"id": "d37fff0a-ee72-460b-9c81-46816ce7b582",
							"name": "Get image by ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/images/:id",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"images",
										":id"
									],
									"query": [
										{
											"key": "include",
											"value": "uploader,characters,categories,liked-by",
											"description": "The related resources to include in the response.",
											"type": "text",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0",
											"description": "The image's ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								},
								{
									"key": "Content-Length",
									"value": "2827"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"type\": \"image\",\n        \"id\": \"cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0\",\n        \"attributes\": {\n            \"file\": \"https://cdn.nekosapi.com/uploads/images/4RJEIO5TYBCZ3FVNEV7G3J6XVM.webp\",\n            \"title\": \"Categirl with white dress\",\n            \"colors\": {\n                \"primary\": null,\n                \"dominant\": null\n            },\n            \"source\": {\n                \"name\": null,\n                \"url\": null\n            },\n            \"dimens\": {\n                \"height\": 0,\n                \"width\": 0,\n                \"aspectRatio\": null\n            },\n            \"isOriginal\": false,\n            \"isVerified\": false,\n            \"ageRating\": \"sfw\",\n            \"timestamps\": {\n                \"created\": \"2023-01-26T05:39:20.717117Z\",\n                \"updated\": \"2023-02-02T19:50:41.305832Z\"\n            }\n        },\n        \"relationships\": {\n            \"uploader\": {\n                \"links\": {\n                    \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/uploader\",\n                    \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/uploader\"\n                },\n                \"data\": {\n                    \"type\": \"user\",\n                    \"id\": \"8fad93cd-4a9c-4e71-b21f-6eb4efebb3db\"\n                }\n            },\n            \"artist\": {\n                \"links\": {\n                    \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/artist\",\n                    \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/artist\"\n                },\n                \"data\": {\n                    \"type\": \"artist\",\n                    \"id\": \"500c5ecf-8d83-4333-8f0f-207941aaa552\"\n                }\n            },\n            \"categories\": {\n                \"meta\": {\n                    \"count\": 1\n                },\n                \"data\": [\n                    {\n                        \"type\": \"category\",\n                        \"id\": \"60304e04-6b0b-4930-a3dc-ba8d9e36d160\"\n                    }\n                ],\n                \"links\": {\n                    \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/categories\",\n                    \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/categories\"\n                }\n            },\n            \"characters\": {\n                \"meta\": {\n                    \"count\": 1\n                },\n                \"data\": [\n                    {\n                        \"type\": \"character\",\n                        \"id\": \"6106713f-2275-4208-be91-bcba1fabbbad\"\n                    }\n                ],\n                \"links\": {\n                    \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/characters\",\n                    \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/characters\"\n                }\n            },\n            \"likedBy\": {\n                \"meta\": {\n                    \"count\": 0\n                },\n                \"data\": [],\n                \"links\": {\n                    \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/liked-by\",\n                    \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/liked-by\"\n                }\n            }\n        },\n        \"links\": {\n            \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0\"\n        }\n    },\n    \"included\": [\n        {\n            \"type\": \"artist\",\n            \"id\": \"500c5ecf-8d83-4333-8f0f-207941aaa552\",\n            \"attributes\": {\n                \"name\": \"さんぱち\",\n                \"aliases\": [\n                    \"hatizyuusan\"\n                ],\n                \"imageUrl\": \"https://pbs.twimg.com/profile_images/1538894198732357633/kRwkCnLb_400x400.jpg\",\n                \"officialLinks\": [\n                    \"https://twitter.com/hatizyuusan\"\n                ]\n            },\n            \"relationships\": {\n                \"images\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/relationships/images\",\n                        \"related\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/images\"\n                    }\n                },\n                \"followers\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/relationships/followers\",\n                        \"related\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552/followers\"\n                    }\n                }\n            },\n            \"links\": {\n                \"self\": \"https://api.nekosapi.com/v2/artists/500c5ecf-8d83-4333-8f0f-207941aaa552\"\n            }\n        }\n    ]\n}"
						},
						{
							"id": "a51886e1-9b0e-41ca-a007-00a262bf0f0d",
							"name": "Get image by ID with included uploader",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/images/:id?include=uploader",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"images",
										":id"
									],
									"query": [
										{
											"key": "include",
											"value": "uploader",
											"description": "The related resources to include in the response."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0",
											"description": "The image's ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 08 Feb 2023 04:44:22 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.10.7"
								},
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								},
								{
									"key": "Allow",
									"value": "GET, POST, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "3845"
								},
								{
									"key": "Vary",
									"value": "Origin, Authorization"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"type\": \"image\",\n        \"id\": \"cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0\",\n        \"attributes\": {\n            \"file\": \"https://cdn.nekosapi.com/uploads/images/4RJEIO5TYBCZ3FVNEV7G3J6XVM.webp\",\n            \"title\": \"Categirl with white dress\",\n            \"colors\": {\n                \"primary\": null,\n                \"dominant\": null\n            },\n            \"source\": {\n                \"name\": null,\n                \"url\": null\n            },\n            \"dimens\": {\n                \"height\": 0,\n                \"width\": 0,\n                \"aspectRatio\": null\n            },\n            \"isOriginal\": false,\n            \"isVerified\": false,\n            \"ageRating\": \"sfw\",\n            \"timestamps\": {\n                \"created\": \"2023-01-26T05:39:20.717117Z\",\n                \"updated\": \"2023-02-02T19:50:41.305832Z\"\n            }\n        },\n        \"relationships\": {\n            \"uploader\": {\n                \"links\": {\n                    \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/uploader\",\n                    \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/uploader\"\n                },\n                \"data\": {\n                    \"type\": \"user\",\n                    \"id\": \"8fad93cd-4a9c-4e71-b21f-6eb4efebb3db\"\n                }\n            },\n            \"artist\": {\n                \"links\": {\n                    \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/artist\",\n                    \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/artist\"\n                },\n                \"data\": {\n                    \"type\": \"artist\",\n                    \"id\": \"500c5ecf-8d83-4333-8f0f-207941aaa552\"\n                }\n            },\n            \"categories\": {\n                \"meta\": {\n                    \"count\": 1\n                },\n                \"data\": [\n                    {\n                        \"type\": \"category\",\n                        \"id\": \"60304e04-6b0b-4930-a3dc-ba8d9e36d160\"\n                    }\n                ],\n                \"links\": {\n                    \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/categories\",\n                    \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/categories\"\n                }\n            },\n            \"characters\": {\n                \"meta\": {\n                    \"count\": 1\n                },\n                \"data\": [\n                    {\n                        \"type\": \"character\",\n                        \"id\": \"6106713f-2275-4208-be91-bcba1fabbbad\"\n                    }\n                ],\n                \"links\": {\n                    \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/characters\",\n                    \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/characters\"\n                }\n            },\n            \"likedBy\": {\n                \"meta\": {\n                    \"count\": 0\n                },\n                \"data\": [],\n                \"links\": {\n                    \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/relationships/liked-by\",\n                    \"related\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0/liked-by\"\n                }\n            }\n        },\n        \"links\": {\n            \"self\": \"https://api.nekosapi.com/v2/images/cd7ce8fd-ac01-4dd3-aa10-5f6344494ad0\"\n        }\n    },\n    \"included\": [\n        {\n            \"type\": \"user\",\n            \"id\": \"8fad93cd-4a9c-4e71-b21f-6eb4efebb3db\",\n            \"attributes\": {\n                \"username\": \"Nekidev\",\n                \"nickname\": null,\n                \"biography\": null,\n                \"avatarImage\": \"https://cdn.nekosapi.com/uploads/user/avatar/GECDUAPVVRGVJHW5ESJTHXFRMU.webp\",\n                \"timestamps\": {\n                    \"joined\": \"2023-01-29T09:04:52Z\"\n                },\n                \"permissions\": {\n                    \"isActive\": true,\n                    \"isStaff\": true,\n                    \"isSuperuser\": true\n                }\n            },\n            \"relationships\": {\n                \"following\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/relationships/following\",\n                        \"related\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/following\"\n                    }\n                },\n                \"followers\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/relationships/followers\",\n                        \"related\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/followers\"\n                    }\n                },\n                \"followedArtists\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/relationships/followed-artists\",\n                        \"related\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/followed-artists\"\n                    }\n                },\n                \"followedCharacters\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/relationships/followed-characters\",\n                        \"related\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/followed-characters\"\n                    }\n                },\n                \"followedCategories\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/relationships/followed-categories\",\n                        \"related\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/followed-categories\"\n                    }\n                },\n                \"followedLists\": {\n                    \"links\": {\n                        \"self\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/relationships/followed-lists\",\n                        \"related\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db/followed-lists\"\n                    }\n                }\n            },\n            \"links\": {\n                \"self\": \"https://api.nekosapi.com/v2/users/8fad93cd-4a9c-4e71-b21f-6eb4efebb3db\"\n            }\n        }\n    ]\n}"
						}
					]
				}
			],
			"id": "cc100081-7769-44ef-8481-ea1774f41e12"
		},
		{
			"name": "Get API details",
			"id": "dacf8d6c-6403-43bd-b3e1-1c7a94df2b57",
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.api+json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}",
					"host": [
						"{{BASE_URL}}"
					]
				},
				"description": "This endpoint returns some details about the API, such as the API version and all the endpoints."
			},
			"response": [
				{
					"id": "e94da9c4-6cb6-4e10-9a9d-fa4ba6ee176a",
					"name": "Get API details",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8000/v2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v2"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 08 Feb 2023 04:28:37 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.10.7"
						},
						{
							"key": "Content-Type",
							"value": "application/vnd.api+json"
						},
						{
							"key": "Allow",
							"value": "GET, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "1906"
						},
						{
							"key": "Vary",
							"value": "Origin, Authorization"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"type\": \"api-details\",\n        \"id\": \"1\",\n        \"attributes\": {\n            \"endpoints\": [\n                \"/v2\",\n                \"/v2/images\",\n                \"/v2/images/:id\",\n                \"/v2/images/:id/like\",\n                \"/v2/images/:id/save\",\n                \"/v2/images/:id/artist\",\n                \"/v2/images/:id/liked-by\",\n                \"/v2/images/:id/categories\",\n                \"/v2/images/:id/characters\",\n                \"/v2/images/:id/relationships/artist\",\n                \"/v2/images/:id/relationships/liked-by\",\n                \"/v2/images/:id/relationships/categories\",\n                \"/v2/images/:id/relationships/characters\",\n                \"/v2/artists\",\n                \"/v2/artists/:id\",\n                \"/v2/artists/:id/images\",\n                \"/v2/artists/:id/follow\",\n                \"/v2/artists/:id/followers\",\n                \"/v2/artists/:id/relationships/images\",\n                \"/v2/artists/:id/relationships/followers\",\n                \"/v2/categories\",\n                \"/v2/categories/:id\",\n                \"/v2/categories/:id/images\",\n                \"/v2/categories/:id/follow\",\n                \"/v2/categories/:id/followers\",\n                \"/v2/categories/:id/relationships/images\",\n                \"/v2/categories/:id/relationships/followers\",\n                \"/v2/characters\",\n                \"/v2/characters/:id\",\n                \"/v2/characters/:id/images\",\n                \"/v2/characters/:id/follow\",\n                \"/v2/characters/:id/followers\",\n                \"/v2/characters/:id/relationships/images\",\n                \"/v2/characters/:id/relationships/followers\",\n                \"/v2/lists\",\n                \"/v2/lists/:id\",\n                \"/v2/lists/:id/user\",\n                \"/v2/lists/:id/images\",\n                \"/v2/lists/:id/followers\",\n                \"/v2/lists/:id/relationships/user\",\n                \"/v2/lists/:id/relationships/images\",\n                \"/v2/lists/:id/relationships/followers\",\n                \"/v2/users\",\n                \"/v2/users/@me\",\n                \"/v2/users/:id\",\n                \"/v2/users/:id/follow\",\n                \"/v2/users/:id/followers\",\n                \"/v2/users/:id/following\",\n                \"/v2/users/:id/liked-images\",\n                \"/v2/users/:id/saved-images\",\n                \"/v2/users/:id/followed-artists\",\n                \"/v2/users/:id/followed-characters\",\n                \"/v2/users/:id/followed-categories\",\n                \"/v2/users/:id/relationships/followers\",\n                \"/v2/users/:id/relationships/following\",\n                \"/v2/users/:id/relationships/liked-images\",\n                \"/v2/users/:id/relationships/saved-images\",\n                \"/v2/users/:id/relationships/followed-artists\",\n                \"/v2/users/:id/relationships/followed-characters\",\n                \"/v2/users/:id/relationships/followed-categories\",\n                \"/v2/auth/token\",\n                \"/v2/auth/token/revoke\"\n            ],\n            \"apiVersion\": \"2.0.0-Alpha\"\n        }\n    }\n}"
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "client_authentication",
				"value": "body",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code_with_pkce",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "read write groups",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{PASSWORD}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{USERNAME}}",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{CLIENT_SECRET}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{CLIENT_ID}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{BASE_URL}}/auth/token",
				"type": "string"
			},
			{
				"key": "useBrowser",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "tokenName",
				"value": "Access Token",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b7d915d4-d0bd-488e-93ea-4c2465b91d01",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "977bbc7c-182c-498d-baaf-10053765b13e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "8633a03a-943c-41a4-adf0-988180b906b4",
			"key": "BASE_URL",
			"value": "http://localhost:8000/v2",
			"type": "string"
		}
	]
}